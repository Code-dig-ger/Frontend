[{"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\index.js":"1","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\store.js":"2","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\App.js":"3","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\root-reducer.js":"4","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\problems.page.js":"5","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\homepage\\homepage.page.js":"6","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\ladders\\LaddersLevel.js":"7","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\ladders\\LaddersQuestionPage.js":"8","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\ladders\\LaddersTopic.js":"9","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\practice\\PracticeLevel.js":"10","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\practice\\PracticeTopic.js":"11","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\upsolve\\virtual.page.jsx":"12","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\upsolve\\upsolve.page.jsx":"13","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\profile\\profile.page.jsx":"14","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\logreg\\LogReg.jsx":"15","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\problems-filter\\problems-filter.reducer.js":"16","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\QuestionCard.js":"17","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\filter-modal.component.js":"18","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\LaddersContent.js":"19","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\problem-card.component.js":"20","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\MainCard.js":"21","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\footerComponent\\footer.js":"22","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\headerComponent\\Navbar.js":"23","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\logreg\\loading.jsx":"24","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\problems-filter\\problems-filter.types.js":"25","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\profile\\pie.jsx":"26","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\profile\\bar.jsx":"27","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\problems-filter\\problems-filter.action.js":"28"},{"size":321,"mtime":1608966441074,"results":"29","hashOfConfig":"30"},{"size":272,"mtime":1608966441118,"results":"31","hashOfConfig":"30"},{"size":3301,"mtime":1609080423284,"results":"32","hashOfConfig":"30"},{"size":202,"mtime":1608966441118,"results":"33","hashOfConfig":"30"},{"size":2102,"mtime":1608966441112,"results":"34","hashOfConfig":"30"},{"size":7213,"mtime":1609097036102,"results":"35","hashOfConfig":"30"},{"size":2328,"mtime":1608966441103,"results":"36","hashOfConfig":"30"},{"size":1998,"mtime":1608966441104,"results":"37","hashOfConfig":"30"},{"size":4804,"mtime":1608966441105,"results":"38","hashOfConfig":"30"},{"size":2275,"mtime":1609080423293,"results":"39","hashOfConfig":"30"},{"size":4740,"mtime":1609080423295,"results":"40","hashOfConfig":"30"},{"size":7162,"mtime":1609080423321,"results":"41","hashOfConfig":"30"},{"size":7215,"mtime":1609080423317,"results":"42","hashOfConfig":"30"},{"size":3151,"mtime":1609080423313,"results":"43","hashOfConfig":"30"},{"size":5774,"mtime":1609087392437,"results":"44","hashOfConfig":"30"},{"size":1318,"mtime":1608966441117,"results":"45","hashOfConfig":"30"},{"size":211,"mtime":1608966441064,"results":"46","hashOfConfig":"30"},{"size":2690,"mtime":1608966441065,"results":"47","hashOfConfig":"30"},{"size":555,"mtime":1608972222172,"results":"48","hashOfConfig":"30"},{"size":1439,"mtime":1608966441073,"results":"49","hashOfConfig":"30"},{"size":1788,"mtime":1608981881070,"results":"50","hashOfConfig":"30"},{"size":3550,"mtime":1608966441066,"results":"51","hashOfConfig":"30"},{"size":3180,"mtime":1609091806930,"results":"52","hashOfConfig":"30"},{"size":508,"mtime":1608966441108,"results":"53","hashOfConfig":"30"},{"size":168,"mtime":1608966441117,"results":"54","hashOfConfig":"30"},{"size":1057,"mtime":1609080423312,"results":"55","hashOfConfig":"30"},{"size":814,"mtime":1609080423297,"results":"56","hashOfConfig":"30"},{"size":505,"mtime":1608966441116,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"zcy5sj",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\index.js",[],["126","127"],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\store.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\App.js",["128","129","130"],"// REACT\r\nimport React ,{useState} from \"react\";\r\nimport { BrowserRouter, Switch, Route, useParams, state } from \"react-router-dom\";\r\n// BOOTSTRAP\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./bootstrap-theme/bootstrap.min.cyborg.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n// COMPONENTS\r\n\r\n\r\n// PAGES\r\nimport Homepage from \"./pages/homepage/homepage.page\";\r\nimport Problems from \"./pages/problems.page\";\r\nimport Upsolve from \"./pages/upsolve/upsolve.page\";\r\nimport LogReg from \"./pages/logreg/LogReg\";\r\nimport LaddersLevel from \"./pages/ladders/LaddersLevel\";\r\nimport LaddersTopic from \"./pages/ladders/LaddersTopic\";\r\nimport PracticeLevel from \"./pages/practice/PracticeLevel\";\r\nimport PracticeTopic from \"./pages/practice/PracticeTopic\"; \r\nimport Particles from 'react-particles-js';\r\nimport Profile from './pages/profile/profile.page'\r\nimport Virtual from './pages/upsolve/virtual.page'\r\n\r\n\r\n\r\n//aos 5 for home page only\r\nimport '../node_modules/aos/dist/aos.css'\r\nimport '../node_modules/react-multi-carousel/lib/styles.css'\r\n// CSS\r\nimport \"./App.css\";\r\nimport LaddersQuestionPage from \"./pages/ladders/LaddersQuestionPage\";\r\n\r\n//react context\r\nexport const CredentialsContext=React.createContext();\r\n\r\nconst App = () => {\r\n  \r\n const [creds,setCreds]=useState({});\r\n  return (\r\n    <>\r\n    {/* <Particles\r\n                style={{\r\n                  position: 'fixed',\r\n                  height: '100%',\r\n                  width: '100%'\r\n                }}\r\n                params={{\r\n                    \"particles\": {\r\n                        \"number\": {\r\n                            \"value\": 75\r\n                        },\r\n                        \"size\": {\r\n                            \"value\": 3\r\n                        }\r\n                    },\r\n                    \"interactivity\": {\r\n                        \"events\": {\r\n                            \"onhover\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"repulse\"\r\n                            }\r\n                        }\r\n                    }\r\n                }} /> */}\r\n      <Container fluid style={{paddingBottom:'0', paddingTop: '0'}}>\r\n        <CredentialsContext.Provider value={{creds,setCreds}}>\r\n        <BrowserRouter>\r\n        \r\n          <Switch>\r\n            <Route exact path=\"/problems\" component={Problems} />\r\n             <Route exact path=\"/logreg\" component={LogReg}/>\r\n             <Route exact path=\"/upsolve/rated\" component={Upsolve}/>   \r\n             <Route exact path=\"/laddersLevel\" component={LaddersLevel}/>\r\n             <Route exact path=\"/laddersTopic\" component={LaddersTopic}/>\r\n             <Route exact path=\"/practiceTopic\" component={PracticeTopic}/>\r\n             <Route exact path=\"/practiceLevel\" component={PracticeLevel}/>\r\n             <Route exact path=\"/laddersLevel/topic/page1\" component={LaddersQuestionPage}/>\r\n             <Route exact path=\"/upsolve/virtual\" component={Virtual}/>\r\n             <Route exact path=\"/profile\" component={Profile}/>\r\n            <Route component={Homepage} />\r\n            <Route exact path=\"/home\" component={Homepage}/>\r\n          </Switch>\r\n        </BrowserRouter>\r\n        </CredentialsContext.Provider>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\root-reducer.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\problems.page.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\homepage\\homepage.page.js",["131","132","133","134","135","136","137","138","139","140","141"],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\ladders\\LaddersLevel.js",["142"],"import React, {useState}from 'react'\r\nimport Loading from '../logreg/loading'\r\nimport Header from '../../components/headerComponent/Navbar';\r\nimport \"./LaddersLevel.css\";\r\nimport QuestionCard from '../../components/QuestionCard';\r\nimport LaddersContent from '../../components/LaddersContent';\r\nimport Footer from '../../components/footerComponent/footer';\r\n\r\n\r\nfunction LaddersLevel() {\r\n    const [show,setShow]=useState(true);\r\n    setTimeout(()=>{setShow(false)},1000);\r\n    return (\r\n        <div className=\"ladder\">\r\n            {show? (<Loading />):\r\n            (<div>\r\n            <Header />\r\n            \r\n            <div className=\"container ladders_ques\">\r\n            <br/>\r\n            \r\n                <LaddersContent \r\n                    title='A'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='B'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='C'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='D'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='E'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='F'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='G'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='H'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                \r\n            </div>\r\n            <Footer/>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LaddersLevel\r\n","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\ladders\\LaddersQuestionPage.js",["143","144","145"],"import React from 'react'\r\nimport Navbar from '../../components/headerComponent/Navbar';\r\nimport Footer from '../../components/footerComponent/footer';\r\nimport MainCard from '../../components/MainCard';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './LaddersQuestionPage.css';\r\nimport problemsData from './problemsData.json';\r\n\r\nfunction LaddersQuestionPage() {\r\n    var count=0;\r\n    var button = false;\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"container-card\">\r\n                    {problemsData.result.map((ProblemData)=>{\r\n                        if(ProblemData.status === \"unsolved\")\r\n                        {\r\n                            count++;\r\n                            if(count === 1){\r\n                                button = true;\r\n                            }\r\n                            else{\r\n                                button=false;\r\n                            }\r\n                            \r\n                        }\r\n                        return(\r\n                            <>\r\n                                \r\n                                    <MainCard count={count} ProblemData={ProblemData} buttonDis={button}/>\r\n                            </>\r\n                        )\r\n                        \r\n                    }\r\n                    \r\n                    )}\r\n                    </div>\r\n                    {/* <Col>\r\n                        <MainCard solved=\"true\"/>\r\n                    </Col>\r\n                    <Col>\r\n                     <MainCard solved=\"false\" />\r\n                    </Col>\r\n                    <Col>\r\n                     <MainCard solved=\"false\"/>\r\n                    </Col>\r\n                    <Col>\r\n                      <MainCard solved=\"false\"/>\r\n                    </Col> */}\r\n            </div>\r\n            \r\n\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LaddersQuestionPage\r\n","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\ladders\\LaddersTopic.js",["146"],"import React, {useState} from 'react';\r\nimport Loading from '../logreg/loading'\r\nimport \"./LaddersTopic.css\";\r\nimport IndexNavbar from '../../components/headerComponent/Navbar';\r\nimport QuestionCard from '../../components/QuestionCard';\r\nimport LaddersContent from '../../components/LaddersContent';\r\nimport Footer from '../../components/footerComponent/footer';\r\n\r\nfunction LaddersTopic() {\r\n    const [show,setShow]=useState(true);\r\n    setTimeout(()=>{setShow(false)},1000);\r\n    return (\r\n        <div className=\"ladder\">\r\n            {show? (<Loading />):\r\n            (<div>\r\n            <IndexNavbar />\r\n            \r\n            <div className=\"container ladders_ques\">\r\n            <br/>\r\n            \r\n                <LaddersContent \r\n                    title='Warm Up'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Implementation'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Arrays'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Number Theory'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Hashmaps & Sets'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Stacks, Queues, Dequeues & Priority Queues'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Strings'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Maths'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Greedy'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Interactive Problems'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Bit Manipulation'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Binary Search/Divide and Conquer'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Dynamic Programming'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Graphs'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Union Find Disjoint Sets (UFDS)'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Segment Tree'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Trees'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='DFS and similar'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Two Pointers'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n                <LaddersContent \r\n                    title='Combinatorics'\r\n                    des='All Questions should be attempted in this topic.'\r\n                />\r\n                <br/>\r\n            </div>\r\n            <Footer/>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LaddersTopic\r\n","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\practice\\PracticeLevel.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\practice\\PracticeTopic.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\upsolve\\virtual.page.jsx",["147"],"import React from 'react'\r\nimport './upsolve.style.css'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Carousel from 'react-multi-carousel';\r\nimport Navbar from '../../components/headerComponent/Navbar'\r\nimport Footer from '../../components/footerComponent/footer'\r\n\r\n\r\n\r\nconst Virtual =()=>{\r\n   \r\n    const data={\"status\": \"OK\",\r\n    \"result\": [\r\n      {\r\n        \"id\": 1388,\r\n        \"name\": \"Codeforces Round #660 (Div. 2)\",\r\n        \"problems\": [\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"A\",\r\n            \"name\": \"Captain Flint and Crew Recruitment\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 750,\r\n            \"rating\": 800,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"greedy\",\r\n              \"math\",\r\n              \"number theory\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"B\",\r\n            \"name\": \"Captain Flint and a Long Voyage\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 1000,\r\n            \"rating\": 1000,\r\n            \"tags\": [\r\n              \"greedy\",\r\n              \"math\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"C\",\r\n            \"name\": \"Uncle Bogdan and Country Happiness\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 1500,\r\n            \"rating\": 1800,\r\n            \"tags\": [\r\n              \"dfs and similar\",\r\n              \"greedy\",\r\n              \"math\",\r\n              \"trees\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"D\",\r\n            \"name\": \"Captain Flint and Treasure\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 2000,\r\n            \"rating\": 2000,\r\n            \"tags\": [\r\n              \"data structures\",\r\n              \"dfs and similar\",\r\n              \"graphs\",\r\n              \"greedy\",\r\n              \"implementation\",\r\n              \"trees\"\r\n            ],\r\n            \"result\": \"upsolved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"E\",\r\n            \"name\": \"Uncle Bogdan and Projections\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 2750,\r\n            \"rating\": 2700,\r\n            \"tags\": [\r\n              \"data structures\",\r\n              \"geometry\",\r\n              \"sortings\"\r\n            ],\r\n            \"result\": \"wrong\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"id\": 1389,\r\n        \"name\": \"Educational Codeforces Round 92 (Rated for Div. 2)\",\r\n        \"problems\": [\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"A\",\r\n            \"name\": \"LCM Problem\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 800,\r\n            \"tags\": [\r\n              \"constructive algorithms\",\r\n              \"greedy\",\r\n              \"math\",\r\n              \"number theory\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"B\",\r\n            \"name\": \"Array Walk\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 1600,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"dp\",\r\n              \"greedy\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"C\",\r\n            \"name\": \"Good String\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 1500,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"dp\",\r\n              \"greedy\",\r\n              \"two pointers\"\r\n            ],\r\n            \"result\": \"upsolved\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"D\",\r\n            \"name\": \"Segment Intersections\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2100,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"greedy\",\r\n              \"implementation\",\r\n              \"math\"\r\n            ],\r\n            \"result\": \"wrong\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"E\",\r\n            \"name\": \"Calendar Ambiguity\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2200,\r\n            \"tags\": [\r\n              \"math\",\r\n              \"number theory\"\r\n            ],\r\n            \"result\": \"wrong\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"F\",\r\n            \"name\": \"Bicolored Segments\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2600,\r\n            \"tags\": [\r\n              \"data structures\",\r\n              \"dp\",\r\n              \"graph matchings\",\r\n              \"sortings\"\r\n            ],\r\n            \"result\": \"not_attempt\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"G\",\r\n            \"name\": \"Directing Edges\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2800,\r\n            \"tags\": [\r\n              \"dfs and similar\",\r\n              \"dp\",\r\n              \"graphs\",\r\n              \"trees\"\r\n            ],\r\n            \"result\": \"not_attempt\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }//get from API--->LOGIC IMPLEMENTED//fake json erased\r\n     \r\n        const result=data.result;//array of objects--1 object 1 contest\r\n    ////////////////////////////data ended////////////////////////////////////\r\n    const responisve={superLargeDesktop: {\r\n        // the naming can be any, depends on you.\r\n        breakpoint: { max: 4000, min: 3000 },\r\n        items: 5\r\n      },\r\n      desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 4\r\n      },\r\n      tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 2\r\n      },\r\n      mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1\r\n      }\r\n    };\r\n    return (\r\n       <>\r\n       <Navbar/><br></br>\r\n        <h5 className=\"heads\">Virtual Contests</h5>\r\n       {result.map((res)=>{\r\n       return(\r\n         <>\r\n         <div>\r\n       <Row className=\"contestRow\">\r\n    <Col sm={2} md={2} lg={3}>< div className=\"contestName\"><h6>{res.name}</h6></div></Col>\r\n            <Col sm={2} md={2} lg={9}><Carousel responsive={responisve}>\r\n               \r\n            {\r\n           \r\n           res. problems.map((prob)=>{\r\n                if(prob.result===\"solved\"){\r\n                return(\r\n                <Col><div className=\"solved text-black\" ><h6>{prob.index}-{prob.name}</h6></div></Col>\r\n                )}\r\n                else if(prob.result===\"wrong\"){\r\n                return(\r\n                <Col> <div className=\"wrong\"><h6>{prob.index}-{prob.name}</h6></div></Col>\r\n                )}\r\n                return(\r\n                   <Col> <div className=\"upsolve\"><h6>{prob.index}-{prob.name}</h6></div></Col>\r\n                )\r\n            })}\r\n            </Carousel></Col>\r\n            \r\n            </Row>\r\n            </div> \r\n            <br></br>\r\n            <br></br>\r\n            </>\r\n       )})}\r\n\r\n\r\n           <Footer/>\r\n        </>\r\n            )\r\n   \r\n}\r\nexport default Virtual","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\upsolve\\upsolve.page.jsx",["148","149","150"],"import React from 'react'\r\nimport './upsolve.style.css'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Carousel from 'react-multi-carousel';\r\nimport Navbar from '../../components/headerComponent/Navbar'\r\nimport Footer from '../../components/footerComponent/footer'\r\n\r\nimport { NavItem,NavLink } from 'reactstrap';\r\n\r\nconst Upsolve=()=>{\r\n\r\n  //fake json\r\n    const data={\"status\": \"OK\",\r\n    \"result\": [\r\n      {\r\n        \"id\": 1388,\r\n        \"name\": \"Codeforces Round #660 (Div. 2)\",\r\n        \"problems\": [\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"A\",\r\n            \"name\": \"Captain Flint and Crew Recruitment\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 750,\r\n            \"rating\": 800,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"greedy\",\r\n              \"math\",\r\n              \"number theory\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"B\",\r\n            \"name\": \"Captain Flint and a Long Voyage\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 1000,\r\n            \"rating\": 1000,\r\n            \"tags\": [\r\n              \"greedy\",\r\n              \"math\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"C\",\r\n            \"name\": \"Uncle Bogdan and Country Happiness\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 1500,\r\n            \"rating\": 1800,\r\n            \"tags\": [\r\n              \"dfs and similar\",\r\n              \"greedy\",\r\n              \"math\",\r\n              \"trees\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"D\",\r\n            \"name\": \"Captain Flint and Treasure\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 2000,\r\n            \"rating\": 2000,\r\n            \"tags\": [\r\n              \"data structures\",\r\n              \"dfs and similar\",\r\n              \"graphs\",\r\n              \"greedy\",\r\n              \"implementation\",\r\n              \"trees\"\r\n            ],\r\n            \"result\": \"upsolved\"\r\n          },\r\n          {\r\n            \"contestId\": 1388,\r\n            \"index\": \"E\",\r\n            \"name\": \"Uncle Bogdan and Projections\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"points\": 2750,\r\n            \"rating\": 2700,\r\n            \"tags\": [\r\n              \"data structures\",\r\n              \"geometry\",\r\n              \"sortings\"\r\n            ],\r\n            \"result\": \"wrong\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"id\": 1389,\r\n        \"name\": \"Educational Codeforces Round 92 (Rated for Div. 2)\",\r\n        \"problems\": [\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"A\",\r\n            \"name\": \"LCM Problem\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 800,\r\n            \"tags\": [\r\n              \"constructive algorithms\",\r\n              \"greedy\",\r\n              \"math\",\r\n              \"number theory\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"B\",\r\n            \"name\": \"Array Walk\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 1600,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"dp\",\r\n              \"greedy\"\r\n            ],\r\n            \"result\": \"solved\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"C\",\r\n            \"name\": \"Good String\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 1500,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"dp\",\r\n              \"greedy\",\r\n              \"two pointers\"\r\n            ],\r\n            \"result\": \"upsolved\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"D\",\r\n            \"name\": \"Segment Intersections\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2100,\r\n            \"tags\": [\r\n              \"brute force\",\r\n              \"greedy\",\r\n              \"implementation\",\r\n              \"math\"\r\n            ],\r\n            \"result\": \"wrong\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"E\",\r\n            \"name\": \"Calendar Ambiguity\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2200,\r\n            \"tags\": [\r\n              \"math\",\r\n              \"number theory\"\r\n            ],\r\n            \"result\": \"wrong\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"F\",\r\n            \"name\": \"Bicolored Segments\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2600,\r\n            \"tags\": [\r\n              \"data structures\",\r\n              \"dp\",\r\n              \"graph matchings\",\r\n              \"sortings\"\r\n            ],\r\n            \"result\": \"not_attempt\"\r\n          },\r\n          {\r\n            \"contestId\": 1389,\r\n            \"index\": \"G\",\r\n            \"name\": \"Directing Edges\",\r\n            \"type\": \"PROGRAMMING\",\r\n            \"rating\": 2800,\r\n            \"tags\": [\r\n              \"dfs and similar\",\r\n              \"dp\",\r\n              \"graphs\",\r\n              \"trees\"\r\n            ],\r\n            \"result\": \"not_attempt\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }//get from API--->LOGIC IMPLEMENTED//fake json erased\r\n     \r\n        const result=data.result;//array of objects--1 object 1 contest\r\n    ////////////////////////////data ended////////////////////////////////////\r\n    const responisve={superLargeDesktop: {\r\n        // the naming can be any, depends on you.\r\n        breakpoint: { max: 4000, min: 3000 },\r\n        items: 5\r\n      },\r\n      desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 4\r\n      },\r\n      tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 2\r\n      },\r\n      mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1\r\n      }\r\n    };\r\n    return (\r\n       <>\r\n       <Navbar/><br></br>\r\n      <h5 className=\"heads\">Rated Contests</h5>\r\n       {result.map((res)=>{\r\n       return(\r\n         <>\r\n         <div>\r\n       <Row className=\"contestRow\">\r\n    <Col sm={2} md={2} lg={3}>< div className=\"contestName\"><h6>{res.name}</h6></div></Col>\r\n            <Col sm={2} md={2} lg={9}><Carousel responsive={responisve}>\r\n               \r\n            {\r\n           \r\n           res. problems.map((prob)=>{\r\n                if(prob.result===\"solved\"){\r\n                return(\r\n                <Col><div className=\"solved text-black\" ><h6>{prob.index}-{prob.name}</h6></div></Col>\r\n                )}\r\n                else if(prob.result===\"wrong\"){\r\n                return(\r\n                <Col> <div className=\"wrong\"><h6>{prob.index}-{prob.name}</h6></div></Col>\r\n                )}\r\n                return(\r\n                   <Col> <div className=\"upsolve\"><h6>{prob.index}-{prob.name}</h6></div></Col>\r\n                )\r\n            })}\r\n            </Carousel></Col>\r\n            \r\n            </Row>\r\n            </div> \r\n            <br></br>\r\n            <br></br>\r\n            </>\r\n       )})}\r\n\r\n\r\n           <Footer/>\r\n        </>\r\n            )\r\n    \r\n}\r\nexport default Upsolve","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\profile\\profile.page.jsx",["151","152","153","154","155","156"],"import React from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nimport Codeforces from './images/codeforces2.png'\r\nimport Codechef from './images/codechef2.png'\r\nimport Atcoder from './images/atcoder2.png'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './profile.style.css'\r\nimport Pie from './pie'\r\nimport Bar from './bar'\r\nimport Navbar from '../../components/headerComponent/Navbar'\r\nimport Footer from '../../components/footerComponent/footer'\r\n\r\n\r\n\r\n\r\nconst Profile=()=>{\r\n  \r\n  const creds=JSON.parse(localStorage.getItem(\"creds\"));\r\n  console.log(creds);\r\n  \r\n  \r\n\r\n       return(\r\n       \r\n        \r\n         <>\r\n         <Navbar/>\r\n         \r\n         <br></br>  \r\n         <br></br>\r\n         <Container className=\"cont\">\r\n              <Row>\r\n              <Col className=\"col2\"lg={4} md={12} sm={12} order-sm-1><h4>User Profile</h4>\r\n               <Row><div className=\"mypic\">👑</div></Row>\r\n               <Row><h5>Chhota Bheem</h5></Row>\r\n               <Row><h6>username: Bheem</h6></Row>\r\n               <Row><h6>handles: xybmdkgdk</h6></Row>\r\n              </Col>\r\n              <Col className=\"col1\" lg={4} md={12} sm={12}>\r\n              <Row><h5 className=\"col1row\">Best Finish</h5></Row>\r\n              <Row className=\"col1row1\">\r\n                  <Col className=\"each\" lg={12} md={12} sm={12}>\r\n              <img className=\"logo\" src={Codeforces}></img>Codeforces :000</Col>\r\n              <Col className=\"each\" lg={12} md={12} sm={12}>\r\n              <img className=\"logo\" src={Codechef}></img>Codechef:0000</Col>\r\n              <Col className=\"each\" lg={12} md={12} sm={12}>\r\n              <img className=\"logo\"src={Atcoder}></img>Atcoder:000000</Col>\r\n              </Row>\r\n              <br></br><br></br>\r\n              <Row><h5 className=\"col1row\">Ratings</h5></Row>\r\n              <Row className=\"col1row1\">\r\n              <Col className=\"each\" lg={12} md={12} sm={12}>\r\n              <img className=\"logo\" src={Codeforces}></img>Codeforces :000</Col>\r\n              <Col className=\"each\" lg={12} md={12} sm={12}>\r\n              <img className=\"logo\" src={Codechef}></img>Codechef:0000</Col>\r\n              <Col className=\"each\" lg={12} md={12} sm={12}>\r\n              <img className=\"logo\"src={Atcoder}></img>Atcoder:000000</Col>\r\n              </Row>\r\n              <br></br>\r\n              \r\n              <br></br>\r\n              </Col>\r\n            \r\n              <Col className=\"col3\" lg={4} md={12} sm={12}>\r\n               <Row className=\"charts\" ><Pie></Pie></Row><br></br>\r\n               <Row><h5 className=\"col1row\">Achievements</h5></Row>\r\n              <Row className=\"col1row1\">\r\n                 <p className=\"each\">khfkkuegfkkfgkugkufkgkg kdhlhlhdlhlhflhlj,jh lihhljkjfugefulefjfebjflu khfkkuegfkkfgkugkufkgkg kdhlhlhdlhlhflhlj,jh lihhljkjfugefulefjfebjflu</p>\r\n              </Row><br></br>\r\n              <Row className=\"charts\"><Bar></Bar></Row>\r\n              </Col>\r\n               \r\n            </Row>\r\n         \r\n             \r\n           \r\n         </Container>\r\n         <Footer/>\r\n         </>\r\n         \r\n     )\r\n}\r\nexport default Profile;","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\logreg\\LogReg.jsx",["157"],"import React, { useState} from 'react'\r\nimport './logreg.style.css'\r\nimport Loading from './loading'\r\nimport Navbar from '../../components/headerComponent/Navbar'\r\nimport Footer from '../../components/footerComponent/footer'\r\n\r\n\r\n\r\n\r\nconst LogReg =()=>{\r\n\r\n  //states and handler for register\r\n  const [emailR,setEmailR]=useState(\"\");\r\n  const [usernameR,setUsernameR] =useState(\"\");\r\n  const [passwordR,setPassWordR]=useState(\"\");\r\n  const [msgR,setmsgR]=useState(\"\");\r\n \r\n  const register=(e)=>{\r\n    e.preventDefault();\r\n        fetch('https://api.codedigger.tech/auth/register/',{\r\n            method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            \"email\":emailR,\r\n            \"username\":usernameR,\r\n            \"password\":passwordR\r\n        })\r\n        }).then((response)=>{\r\n          if(response.status===400){\r\n            console.log(response.json());\r\n            setmsgR(\"User already exist\");\r\n          }\r\n          else{\r\n            setmsgR(\"Successful, please login to explore!!\");\r\n          }\r\n    })\r\n    \r\n  }\r\n\r\n  //states and handler for login\r\n     const [usernameL,setUserNameL]=useState(\"\");\r\n     const [passwordL,setpasswordL]=useState(\"\");\r\n     const [msgL,setmsgL]=useState(\"\");\r\n    \r\n  \r\n\r\n \r\n   async  function login(e){\r\n      e.preventDefault();\r\n     const response= await fetch('https://api.codedigger.tech/auth/login/',{\r\n          method:\"POST\",\r\n      headers:{\r\n          \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n         \"username\":usernameL,\r\n         \"password\":passwordL\r\n      })\r\n      })\r\n      if(response.status===401){\r\n    //  setmsgL(\"Invalid\");\r\n      const errorData=await response.json();\r\n      console.log(errorData);\r\n      const msg=errorData.detail;\r\n       setmsgL(msg);\r\n      }\r\n      else{\r\n        setmsgL(`Hello, ${usernameL}`);\r\n        const data=await response.json();\r\n        console.log(data);\r\n\r\n        localStorage.setItem(\"creds\",JSON.stringify({\r\n          //first:data.first_time_login,\r\n          access:data.tokens.access,\r\n          refresh:data.tokens.refresh,\r\n          first:data.first_time_login\r\n\r\n        }));\r\n        \r\n        \r\n\r\n      }\r\n      \r\n    }       \r\n\r\n\r\n    \r\n   \r\n    const switchers = [...document.querySelectorAll(\".switcher\")];\r\n    const [show,setShow]=useState(true);\r\nswitchers.forEach((item) => {\r\n  item.addEventListener(\"click\", function () {\r\n    switchers.forEach((item) =>\r\n      item.parentElement.classList.remove(\"is-active\")\r\n    );\r\n    this.parentElement.classList.add(\"is-active\");\r\n  });\r\n});\r\n \r\n   \r\n      setTimeout(()=>{setShow(false)},1000);\r\n      function handle(e){\r\n        e.preventDefault();\r\n        localStorage.clear();\r\n      }\r\n\r\n    return (\r\n      <>\r\n      <Navbar/>\r\n      <br></br>\r\n      <div>\r\n        {\r\n          show?(<Loading/>):(<>\r\n         \r\n       <div className=\"ContBody\">\r\n      <section className=\"forms-section\">\r\n  <div className=\"forms\">\r\n    <div className=\"form-wrapper is-active\">\r\n      <button type=\"button\" className=\"switcher switcher-login\">\r\n        Login\r\n        <span className=\"underline\"></span>\r\n      </button>\r\n\r\n      <form onSubmit={login} className=\"form form-login\">\r\n        <fieldset>\r\n          <legend>Please, enter your email and password for login.</legend>\r\n          <div className=\"input-block\">\r\n            <label for=\"login-email\">Username</label>\r\n            <input onChange={(e)=>setUserNameL(e.target.value)} className=\"text-primary\" id=\"login-email\" type=\"text\" required/>\r\n          </div>\r\n          <div className=\"input-block\">\r\n            <label for=\"login-password\">Password</label>\r\n            <input onChange={(e)=>setpasswordL(e.target.value)} id=\"login-password\" className=\"text-primary\" type=\"password\" required/>\r\n          </div>\r\n        </fieldset>\r\n        <h7 className=\"text-tertiary\">{msgL}</h7>\r\n        <button type=\"submit\" className=\"btn-login\">Login</button>\r\n      </form>\r\n\r\n    </div>\r\n    <div class=\"form-wrapper\">\r\n      <button type=\"button\" className=\"switcher switcher-signup\" onClick={()=>{\r\n         const switchers = [...document.querySelectorAll(\".switcher\")];\r\n\r\n         switchers.forEach((item) => {\r\n           item.addEventListener(\"click\", function () {\r\n             switchers.forEach((item) =>\r\n               item.parentElement.classList.remove(\"is-active\")\r\n             );\r\n             this.parentElement.classList.add(\"is-active\");\r\n           });\r\n         });\r\n      }}>\r\n        Register\r\n        <span className=\"underline\"></span>\r\n      </button>\r\n\r\n      <form onSubmit={register} className=\"form form-signup\">\r\n        <fieldset>\r\n          <legend>Please, enter your email, username and password for sign up.</legend>\r\n          <div className=\"input-block\">\r\n            <label for=\"signup-email\">E-mail</label>\r\n            <input onChange={(e)=>setEmailR(e.target.value)} id=\"signup-email\" type=\"email\" required/>\r\n          </div>\r\n          <div className=\"input-block\">\r\n            <label for=\"username\">Username</label>\r\n            <input onChange ={(e)=>setUsernameR(e.target.value)} id=\"username\" type=\"text\" required/>\r\n          </div>\r\n          <div className=\"input-block\">\r\n            <label for=\"signup-password\">Password</label>\r\n            <input onChange={(e)=>{setPassWordR(e.target.value)}} id=\"signup-password\" type=\"password\" required/>\r\n          </div>\r\n        </fieldset>\r\n    <h7 className=\"text-tertiary\">{msgR}</h7>\r\n        <button type=\"submit\" className=\"btn-signup\">Register</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</section>\r\n        \r\n      </div>\r\n       <Footer/></>)\r\n      }\r\n    </div>\r\n   \r\n    </>\r\n    )     \r\n    \r\n}\r\n\r\nexport default LogReg","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\problems-filter\\problems-filter.reducer.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\QuestionCard.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\filter-modal.component.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\LaddersContent.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\problem-card.component.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\MainCard.js",["158","159","160","161","162","163","164"],"import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\nimport './MainCard.css';\r\n\r\n\r\n\r\nconst MainCard = (props) => {\r\n  if(props.buttonDis){\r\n    return(\r\n      <>\r\n      <div className=\"card unsolvedCard\">\r\n      <h3 className=\"title\">{props.ProblemData.name}</h3>\r\n      <div className=\"bar\">\r\n        <div className=\"emptybar\" />\r\n        <div className={props.ProblemData.status === \"solved\"? \"filledbar\": \"exapmplebar\"}></div>\r\n      </div>\r\n        <div className=\"circle\">\r\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle className=\"stroke\" cx=\"60\" cy=\"60\" r=\"50\"/>\r\n          </svg>\r\n        </div>\r\n        <div className=\"container_card\">\r\n          <Button target=\"_blank\" className=\"buttondisp\" href={props.ProblemData.url}>Solve</Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n  else{\r\n  return(\r\n    <>\r\n      <div className=\"card\">\r\n      <h3 className={props.count > 1 ? \"title_hide\" : \"title\"}>{props.ProblemData.name}</h3>\r\n      <h3 className={props.count > 1 ? \"title_locked\" : \"title_hide\"}>?</h3>\r\n      <div className=\"bar\">\r\n        <div className=\"emptybar\" />\r\n        <div className={props.ProblemData.status === \"solved\"? \"filledbar\": \"\"}></div>\r\n      </div>\r\n        <div className=\"circle\">\r\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle className=\"stroke\" cx=\"60\" cy=\"60\" r=\"50\"/>\r\n          </svg>\r\n        </div>\r\n        <div className=\"container_card\">\r\n            <a target=\"_blank\" href={props.count > 1 ? \"\" : props.ProblemData.url}><div className={props.count > 1 ? \"lock\": \"check\"}></div></a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default MainCard;","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\footerComponent\\footer.js",["165","166","167"],"import React from 'react';\r\nimport './footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEnvelope, faPhone} from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebook, faGithub, faGooglePlus, faGooglePlusSquare, faInstagram, faInstagramSquare, faTwitter, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport image1 from './images/codeforces.jpg';\r\n\r\n//FUCNTIONAL COMPONENT\r\n\r\nfunction Footer() {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\"> \r\n                            \r\n                <div className=\"col-6 col-sm-3\">\r\n                    <h5>Links</h5>\r\n                    <br/>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link to=\"/\">About</Link></li>\r\n                        <li><Link to=\"/\">Menu</Link></li>\r\n                        <li><Link to=\"/\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 contactUs\">\r\n                    <h5>Contact Us</h5>\r\n                    <br/>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faPhone} size=\"md\"/> : +852 1234 5678<br />\r\n\t\t                <FontAwesomeIcon icon={faPhone} size=\"md\"/> : +852 8765 4321<br />\r\n\t\t                <FontAwesomeIcon icon={faEnvelope} size=\"md\"/> : <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </div>\r\n                    <br/>\r\n                    <div >\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://codedigger.tech\"><FontAwesomeIcon icon={faGooglePlus} size=\"2x\"/></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://codedigger.tech/\"><FontAwesomeIcon icon={faFacebook} size=\"2x\"/></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://codedigger.tech\"><FontAwesomeIcon icon={faTwitter} size=\"2x\"/></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://codedigger.tech\"><FontAwesomeIcon icon={faInstagram} size=\"2x\"/></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://codedigger.tech\"><FontAwesomeIcon icon={faGithub} size=\"2x\"/></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"http://codedigger.tech\"><FontAwesomeIcon icon={faYoutube} size=\"2x\"/></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6 col-sm-2\">\r\n                    <h5>Platforms</h5>\r\n                    <br></br>\r\n                    <div>\r\n                        <ul >\r\n                            <li><div className=\"codeforces\"></div>CODEFORCES</li>\r\n                            <li><div className=\"codeforces\"></div>CODECHEF</li>\r\n                            <li><div className=\"codeforces\"></div>SPOJ</li>\r\n                            <li><div className=\"codeforces\"></div>TOPCODER</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright Codedigger</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\components\\headerComponent\\Navbar.js",["168"],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\logreg\\loading.jsx",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\problems-filter\\problems-filter.types.js",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\profile\\pie.jsx",["169"],"import React from 'react';\r\nimport {Pie, Doughnut} from 'react-chartjs-2';\r\n\r\nconst state = {\r\n  labels: ['Graph', 'Dp', 'Trees',\r\n           'Arrays', 'Bit Manipulation','Strings','Number Theory','Recursion'],\r\n  datasets: [\r\n    {\r\n      label: 'Rainfall',\r\n      backgroundColor: [\r\n        '#B21F00',\r\n        '#C9DE00',\r\n        '#2FDE00',\r\n        '#00A6B4',\r\n        '#6800B4',\r\n        '#B21F10',\r\n        '#C9DE20',\r\n        '#2FDE07',\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#501800',\r\n      '#4B5000',\r\n      '#175000',\r\n      '#003350',\r\n      '#35014F',\r\n      '#B21F10',\r\n        '#C9DE20',\r\n        '#2FDE05',\r\n      ],\r\n      data: [65, 59, 80, 81, 56,50,60,70]\r\n    }\r\n  ]\r\n}\r\n\r\nconst myPie=()=>{\r\n    return (\r\n        <Pie  data={state}\r\n        options={{\r\n          title:{\r\n            display:true,\r\n            text:'Topicwise Distribution',\r\n            fontSize:20\r\n          },\r\n          legend:{\r\n            display:true,\r\n            position:'right'\r\n          }\r\n        }}\r\n      />\r\n    )\r\n}\r\nexport default myPie","C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\pages\\profile\\bar.jsx",[],"C:\\Users\\SAI KESHARI\\Codedigger\\Frontend\\src\\redux\\problems-filter\\problems-filter.action.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":40,"nodeType":"176","messageId":"177","endLine":3,"endColumn":49},{"ruleId":"174","severity":1,"message":"178","line":3,"column":51,"nodeType":"176","messageId":"177","endLine":3,"endColumn":56},{"ruleId":"174","severity":1,"message":"179","line":21,"column":8,"nodeType":"176","messageId":"177","endLine":21,"endColumn":17},{"ruleId":"174","severity":1,"message":"180","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":33,"column":41,"nodeType":"183","endLine":33,"endColumn":79},{"ruleId":"184","severity":1,"message":"185","line":41,"column":92,"nodeType":"183","endLine":41,"endColumn":125},{"ruleId":"184","severity":1,"message":"185","line":44,"column":113,"nodeType":"183","endLine":44,"endColumn":146},{"ruleId":"184","severity":1,"message":"185","line":47,"column":93,"nodeType":"183","endLine":47,"endColumn":126},{"ruleId":"184","severity":1,"message":"185","line":59,"column":79,"nodeType":"183","endLine":60,"endColumn":49},{"ruleId":"184","severity":1,"message":"185","line":62,"column":78,"nodeType":"183","endLine":63,"endColumn":49},{"ruleId":"184","severity":1,"message":"185","line":65,"column":78,"nodeType":"183","endLine":66,"endColumn":49},{"ruleId":"186","severity":1,"message":"187","line":86,"column":57,"nodeType":"183","endLine":86,"endColumn":80},{"ruleId":"186","severity":1,"message":"187","line":100,"column":57,"nodeType":"183","endLine":100,"endColumn":80},{"ruleId":"186","severity":1,"message":"187","line":114,"column":57,"nodeType":"183","endLine":114,"endColumn":80},{"ruleId":"174","severity":1,"message":"188","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":20},{"ruleId":"174","severity":1,"message":"189","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":19},{"ruleId":"174","severity":1,"message":"190","line":5,"column":21,"nodeType":"176","messageId":"177","endLine":5,"endColumn":24},{"ruleId":"174","severity":1,"message":"191","line":5,"column":26,"nodeType":"176","messageId":"177","endLine":5,"endColumn":29},{"ruleId":"174","severity":1,"message":"188","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":233,"column":12,"nodeType":"194","messageId":"195","endLine":233,"endColumn":25,"fix":"196"},{"ruleId":"174","severity":1,"message":"197","line":9,"column":10,"nodeType":"176","messageId":"177","endLine":9,"endColumn":17},{"ruleId":"174","severity":1,"message":"198","line":9,"column":18,"nodeType":"176","messageId":"177","endLine":9,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":234,"column":12,"nodeType":"194","messageId":"195","endLine":234,"endColumn":25,"fix":"199"},{"ruleId":"181","severity":1,"message":"182","line":44,"column":15,"nodeType":"183","endLine":44,"endColumn":54},{"ruleId":"181","severity":1,"message":"182","line":46,"column":15,"nodeType":"183","endLine":46,"endColumn":52},{"ruleId":"181","severity":1,"message":"182","line":48,"column":15,"nodeType":"183","endLine":48,"endColumn":50},{"ruleId":"181","severity":1,"message":"182","line":54,"column":15,"nodeType":"183","endLine":54,"endColumn":54},{"ruleId":"181","severity":1,"message":"182","line":56,"column":15,"nodeType":"183","endLine":56,"endColumn":52},{"ruleId":"181","severity":1,"message":"182","line":58,"column":15,"nodeType":"183","endLine":58,"endColumn":50},{"ruleId":"174","severity":1,"message":"200","line":104,"column":16,"nodeType":"176","messageId":"177","endLine":104,"endColumn":22},{"ruleId":"174","severity":1,"message":"201","line":3,"column":3,"nodeType":"176","messageId":"177","endLine":3,"endColumn":7},{"ruleId":"174","severity":1,"message":"202","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":16},{"ruleId":"174","severity":1,"message":"203","line":3,"column":18,"nodeType":"176","messageId":"177","endLine":3,"endColumn":26},{"ruleId":"174","severity":1,"message":"204","line":3,"column":28,"nodeType":"176","messageId":"177","endLine":3,"endColumn":36},{"ruleId":"174","severity":1,"message":"205","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":12},{"ruleId":"174","severity":1,"message":"206","line":4,"column":14,"nodeType":"176","messageId":"177","endLine":4,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":48,"column":16,"nodeType":"209","endLine":48,"endColumn":31},{"ruleId":"174","severity":1,"message":"210","line":6,"column":46,"nodeType":"176","messageId":"177","endLine":6,"endColumn":64},{"ruleId":"174","severity":1,"message":"211","line":6,"column":79,"nodeType":"176","messageId":"177","endLine":6,"endColumn":96},{"ruleId":"174","severity":1,"message":"212","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":14},{"ruleId":"174","severity":1,"message":"213","line":14,"column":3,"nodeType":"176","messageId":"177","endLine":14,"endColumn":13},{"ruleId":"174","severity":1,"message":"214","line":2,"column":14,"nodeType":"176","messageId":"177","endLine":2,"endColumn":22},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'state' is defined but never used.","'Particles' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'QuestionCard' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property problems.","MemberExpression","unexpectedWhitespace",{"range":"217","text":"218"},"'NavItem' is defined but never used.","'NavLink' is defined but never used.",{"range":"219","text":"218"},"'handle' is defined but never used.","'Card' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'faGooglePlusSquare' is defined but never used.","'faInstagramSquare' is defined but never used.","'image1' is defined but never used.","'NavbarText' is defined but never used.","'Doughnut' is defined but never used.","no-global-assign","no-unsafe-negation",[6352,6354],".",[6404,6406]]